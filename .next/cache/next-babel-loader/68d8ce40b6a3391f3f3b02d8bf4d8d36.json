{"ast":null,"code":"var _jsxFileName = \"/Users/hrak/Desktop/code/carousel-1/components/Slider.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from \"./Slider.module.css\";\n\nconst Slider = ({\n  currentSlide,\n  setCurrentSlide\n}) => {\n  const handleClick = direction => {\n    let newSlide = currentSlide;\n    direction == \"previous\" ? newSlide -= 1 : newSlide += 1;\n    setCurrentSlide(newSlide);\n  };\n\n  return __jsx(\"div\", {\n    className: styles.sliderContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: styles.previous,\n    onClick: () => handleClick(\"previous\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"\\u276E\"), __jsx(\"div\", {\n    className: styles.next,\n    onClick: () => handleClick(\"next\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"\\u276F\"));\n};\n\nexport default Slider;","map":{"version":3,"sources":["/Users/hrak/Desktop/code/carousel-1/components/Slider.js"],"names":["styles","Slider","currentSlide","setCurrentSlide","handleClick","direction","newSlide","sliderContainer","previous","next"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAD,KAAuC;AACpD,QAAMC,WAAW,GAAGC,SAAS,IAAI;AAC/B,QAAIC,QAAQ,GAAGJ,YAAf;AACAG,IAAAA,SAAS,IAAI,UAAb,GAA2BC,QAAQ,IAAI,CAAvC,GAA6CA,QAAQ,IAAI,CAAzD;AACAH,IAAAA,eAAe,CAACG,QAAD,CAAf;AACD,GAJD;;AAMA,SACE;AAAK,IAAA,SAAS,EAAEN,MAAM,CAACO,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEP,MAAM,CAACQ,QAAvB;AAAiC,IAAA,OAAO,EAAE,MAAMJ,WAAW,CAAC,UAAD,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIE;AAAK,IAAA,SAAS,EAAEJ,MAAM,CAACS,IAAvB;AAA6B,IAAA,OAAO,EAAE,MAAML,WAAW,CAAC,MAAD,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CADF;AAUD,CAjBD;;AAmBA,eAAeH,MAAf","sourcesContent":["import styles from \"./Slider.module.css\";\n\nconst Slider = ({ currentSlide, setCurrentSlide }) => {\n  const handleClick = direction => {\n    let newSlide = currentSlide;\n    direction == \"previous\" ? (newSlide -= 1) : (newSlide += 1);\n    setCurrentSlide(newSlide);\n  };\n\n  return (\n    <div className={styles.sliderContainer}>\n      <div className={styles.previous} onClick={() => handleClick(\"previous\")}>\n        &#10094;\n      </div>\n      <div className={styles.next} onClick={() => handleClick(\"next\")}>\n        &#10095;\n      </div>\n    </div>\n  );\n};\n\nexport default Slider;\n"]},"metadata":{},"sourceType":"module"}