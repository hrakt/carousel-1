{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/hrak/Desktop/code/carousel-1/components/Carousel.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"./Carousel.module.scss\";\nimport Slider from \"./Slider\";\nimport cx from \"classnames\";\n\nconst Carousel = () => {\n  const {\n    0: currentSlide,\n    1: setCurrentSlide\n  } = useState(0);\n  const {\n    0: direction,\n    1: setDirection\n  } = useState(null);\n  const {\n    0: shifting,\n    1: setShifting\n  } = useState(false);\n  const track = React.createRef();\n  const slideArr = [0, 1, 2, 3];\n  const upperLimit = slideArr.length - 1;\n  useEffect(() => {\n    const style = window.getComputedStyle(React.findDOMNode(track));\n  });\n\n  const handleAnimation = direction => {\n    console.log(direction);\n    directions = direction;\n  };\n\n  const handleClick = direction => {\n    cloneSlides();\n    let newSlideNumber = currentSlide + direction;\n    direction = direction;\n    setShifting(true);\n    setCurrentSlide(newSlideNumber);\n    setDirection(direction);\n  };\n\n  const resetSlide = () => {\n    console.log(currentSlide, \"currentslide\");\n    console.log(upperLimit, \"upperLimit\");\n\n    if (currentSlide === upperLimit + 1) {\n      setShifting(false);\n      setCurrentSlide(0);\n    }\n\n    if (currentSlide === 0) {\n      setShifting(false);\n      setCurrentSlide(0);\n    }\n  };\n\n  const cloneSlides = () => {\n    let children = [];\n\n    for (let i = 0; i <= upperLimit; i++) {\n      children.push(__jsx(\"div\", {\n        key: i,\n        className: styles.box,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, slideArr[i]));\n    }\n\n    return children;\n  };\n\n  const className = cx(styles.track, {\n    [styles.shifting]: shifting\n  });\n  return __jsx(\"div\", {\n    className: styles.mainContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"CurrentSlide:\", currentSlide), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"direction:\", direction), __jsx(\"div\", {\n    className: styles.bigContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: className,\n    style: {\n      transform: `translateX(${(currentSlide + 4) * -152}px)`\n    },\n    ref: track,\n    onTransitionEnd: resetSlide,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, cloneSlides(), __jsx(\"div\", {\n    className: styles.box,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, slideArr[0]), __jsx(\"div\", {\n    className: styles.box,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \" \", slideArr[1], \" \"), __jsx(\"div\", {\n    className: styles.box,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, slideArr[2]), __jsx(\"div\", {\n    className: styles.box,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, slideArr[3]), cloneSlides())), __jsx(Slider, _extends({\n    setCurrentSlide,\n    currentSlide,\n    handleAnimation,\n    handleClick\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })));\n};\n\nexport default Carousel;","map":{"version":3,"sources":["/Users/hrak/Desktop/code/carousel-1/components/Carousel.js"],"names":["React","useState","useEffect","styles","Slider","cx","Carousel","currentSlide","setCurrentSlide","direction","setDirection","shifting","setShifting","track","createRef","slideArr","upperLimit","length","style","window","getComputedStyle","findDOMNode","handleAnimation","console","log","directions","handleClick","cloneSlides","newSlideNumber","resetSlide","children","i","push","box","className","mainContainer","bigContainer","transform"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styles from \"./Carousel.module.scss\";\nimport Slider from \"./Slider\";\nimport cx from \"classnames\";\n\nconst Carousel = () => {\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [direction, setDirection] = useState(null);\n  const [shifting, setShifting] = useState(false);\n\n  const track = React.createRef();\n\n  const slideArr = [0, 1, 2, 3];\n  const upperLimit = slideArr.length - 1;\n\n  useEffect(() => {\n    const style = window.getComputedStyle(React.findDOMNode(track));\n  });\n\n  const handleAnimation = direction => {\n    console.log(direction);\n    directions = direction;\n  };\n\n  const handleClick = direction => {\n    cloneSlides();\n    let newSlideNumber = currentSlide + direction;\n    direction = direction;\n    setShifting(true);\n\n    setCurrentSlide(newSlideNumber);\n    setDirection(direction);\n  };\n\n  const resetSlide = () => {\n    console.log(currentSlide, \"currentslide\");\n    console.log(upperLimit, \"upperLimit\");\n    if (currentSlide === upperLimit + 1) {\n      setShifting(false);\n      setCurrentSlide(0);\n    }\n    if (currentSlide === 0) {\n      setShifting(false);\n      setCurrentSlide(0);\n    }\n  };\n\n  const cloneSlides = () => {\n    let children = [];\n    for (let i = 0; i <= upperLimit; i++) {\n      children.push(\n        <div key={i} className={styles.box}>\n          {slideArr[i]}\n        </div>\n      );\n    }\n\n    return children;\n  };\n\n  const className = cx(styles.track, {\n    [styles.shifting]: shifting\n  });\n\n  return (\n    <div className={styles.mainContainer}>\n      <div>CurrentSlide:{currentSlide}</div>\n      <div>direction:{direction}</div>\n      <div className={styles.bigContainer}>\n        <div\n          className={className}\n          style={{ transform: `translateX(${(currentSlide + 4) * -152}px)` }}\n          ref={track}\n          onTransitionEnd={resetSlide}\n        >\n          {cloneSlides()}\n          <div className={styles.box}>{slideArr[0]}</div>\n          <div className={styles.box}> {slideArr[1]} </div>\n          <div className={styles.box}>{slideArr[2]}</div>\n          <div className={styles.box}>{slideArr[3]}</div>\n          {cloneSlides()}\n        </div>\n      </div>\n      <Slider {...{ setCurrentSlide, currentSlide, handleAnimation, handleClick }} />\n    </div>\n  );\n};\n\nexport default Carousel;\n"]},"metadata":{},"sourceType":"module"}