{"version":3,"file":"static/webpack/static/development/pages/index.js.f9ed638357b9f7f0abaf.hot-update.js","sources":["webpack:///./components/Carousel.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styles from \"./Carousel.module.scss\";\nimport Slider from \"./Slider\";\nimport cx from \"classnames\";\n\nconst Carousel = () => {\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [direction, setDirection] = useState(null);\n  const [shifting, setShifting] = useState(false);\n\n  const track = React.createRef();\n\n  const slideArr = [0, 1, 2, 3];\n  const upperLimit = slideArr.length - 1;\n\n  const handleAnimation = direction => {\n    console.log(direction);\n    directions = direction;\n  };\n\n  const handleClick = direction => {\n    cloneSlides();\n    let newSlideNumber = currentSlide + direction;\n    direction = direction;\n    setShifting(true);\n\n    setCurrentSlide(newSlideNumber);\n    setDirection(direction);\n  };\n\n  const resetSlide = () => {\n    console.log(currentSlide, \"currentslide\");\n    console.log(upperLimit, \"upperLimit\");\n    if (currentSlide === upperLimit + 1) {\n      setShifting(false);\n      setCurrentSlide(0);\n    }\n    if (currentSlide === -4) {\n      setShifting(false);\n      setCurrentSlide(0);\n    }\n  };\n\n  const cloneSlides = () => {\n    let children = [];\n    for (let i = 0; i < upperLimit; i++) {\n      children.push(<div className={styles.box}>{slideArr[i]}</div>);\n    }\n    return children;\n    // if (after) {\n    //   // let newChild = document.createElement(\"div\");\n    //   // newChild.className = `${styles.box}`;\n    //   // newChild.innerHTML = `${slideArr[currentSlide - 1]}`;\n    //   // track.current.appendChild(newChild);\n\n    // } else {\n    //   for (let i = 0; i < upperLimit; i++) {\n    //     children.push(<div className={styles.box}>{slideArr[i]}</div>);\n    //   }\n    //   return children;\n    // }\n  };\n\n  const className = cx(styles.track, {\n    [styles.shifting]: shifting\n  });\n\n  return (\n    <div className={styles.mainContainer}>\n      <div>CurrentSlide:{currentSlide}</div>\n      <div>direction:{direction}</div>\n      <div className={styles.bigContainer}>\n        <div\n          className={className}\n          style={{ transform: `translateX(${currentSlide * -152}px)` }}\n          ref={track}\n          onTransitionEnd={resetSlide}\n        >\n          {cloneSlides()}\n          <div className={styles.box}>{slideArr[0]}</div>\n          <div className={styles.box}> {slideArr[1]} </div>\n          <div className={styles.box}>{slideArr[2]}</div>\n          <div className={styles.box}>{slideArr[3]}</div>\n          {cloneSlides()}\n        </div>\n      </div>\n      <Slider {...{ setCurrentSlide, currentSlide, handleAnimation, handleClick }} />\n    </div>\n  );\n};\n\nexport default Carousel;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;A","sourceRoot":""}